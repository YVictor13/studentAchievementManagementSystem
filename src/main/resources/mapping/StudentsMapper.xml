<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.StudentsMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Students" >
    <id column="studentId" property="studentid" jdbcType="VARCHAR" />
    <result column="passWord" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="idNumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="political" property="political" jdbcType="VARCHAR" />
    <result column="classId" property="classid" jdbcType="VARCHAR" />
    <result column="collegeId" property="collegeid" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="majorId" property="majorid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    studentId, passWord, name, sex, birthday, nation, idNumber, political, classId, collegeId, 
    grade, majorId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from students
    where studentId = #{studentid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from students
    where studentId = #{studentid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Students" >
    insert into students (studentId, passWord, name, 
      sex, birthday, nation, 
      idNumber, political, classId, 
      collegeId, grade, majorId
      )
    values (#{studentid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{idnumber,jdbcType=VARCHAR}, #{political,jdbcType=VARCHAR}, #{classid,jdbcType=VARCHAR}, 
      #{collegeid,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{majorid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Students" >
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="password != null" >
        passWord,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="idnumber != null" >
        idNumber,
      </if>
      <if test="political != null" >
        political,
      </if>
      <if test="classid != null" >
        classId,
      </if>
      <if test="collegeid != null" >
        collegeId,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="majorid != null" >
        majorId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=VARCHAR},
      </if>
      <if test="collegeid != null" >
        #{collegeid,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="majorid != null" >
        #{majorid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Students" >
    update students
    <set >
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        classId = #{classid,jdbcType=VARCHAR},
      </if>
      <if test="collegeid != null" >
        collegeId = #{collegeid,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="majorid != null" >
        majorId = #{majorid,jdbcType=VARCHAR},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Students" >
    update students
    set passWord = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      idNumber = #{idnumber,jdbcType=VARCHAR},
      political = #{political,jdbcType=VARCHAR},
      classId = #{classid,jdbcType=VARCHAR},
      collegeId = #{collegeid,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      majorId = #{majorid,jdbcType=VARCHAR}
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>
</mapper>