<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.TeachersMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Teachers" >
    <id column="teacherId" property="teacherid" jdbcType="VARCHAR" />
    <result column="passWord" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="brithday" property="brithday" jdbcType="VARCHAR" />
    <result column="IdNumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="political" property="political" jdbcType="VARCHAR" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="collegeId" property="collegeid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    teacherId, passWord, name, sex, brithday, IdNumber, political, nation, collegeId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teachers
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teachers
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Teachers" >
    insert into teachers (teacherId, passWord, name, 
      sex, brithday, IdNumber, 
      political, nation, collegeId
      )
    values (#{teacherid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{brithday,jdbcType=VARCHAR}, #{idnumber,jdbcType=VARCHAR}, 
      #{political,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{collegeid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Teachers" >
    insert into teachers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherid != null" >
        teacherId,
      </if>
      <if test="password != null" >
        passWord,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="brithday != null" >
        brithday,
      </if>
      <if test="idnumber != null" >
        IdNumber,
      </if>
      <if test="political != null" >
        political,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="collegeid != null" >
        collegeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherid != null" >
        #{teacherid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null" >
        #{brithday,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="collegeid != null" >
        #{collegeid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Teachers" >
    update teachers
    <set >
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null" >
        brithday = #{brithday,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        IdNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="collegeid != null" >
        collegeId = #{collegeid,jdbcType=VARCHAR},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Teachers" >
    update teachers
    set passWord = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      brithday = #{brithday,jdbcType=VARCHAR},
      IdNumber = #{idnumber,jdbcType=VARCHAR},
      political = #{political,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      collegeId = #{collegeid,jdbcType=VARCHAR}
    where teacherId = #{teacherid,jdbcType=VARCHAR}
  </update>
</mapper>